{"version":3,"sources":["../node_modules/typescript/lib sync","Views/Spintor/Spintor.js","Views/Tiktok/TikTokList.tsx","Views/Tiktok/TiktokView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","styles","wobble","animation","animationName","Radium","keyframes","Spintor","StyleRoot","style","src","alt","width","height","ids","TikTokList","className","map","url","TiktokEmbed","props","frameBorder","allow","allowFullScreen","title","TiktokView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uOAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,gHCHnBC,EAAS,CACfC,OAAO,CACHC,UAAW,QACXC,cAAe,CAACC,IAAOC,UAAUJ,SAAQ,aAIhCK,EAAU,WACnB,OACI,cAAC,IAAOC,UAAR,UACC,qBAAKC,MAAOR,EAAOC,OAAnB,SACC,qBAAKQ,IAAI,eAAeC,IAAI,OAAOC,MAAM,MAAMC,OAAO,aCd1DC,EAAgB,CAAC,sBAAuB,uBAGjCC,EAAa,WACtB,OACA,qBAAKC,UAAU,UAAf,SACCF,EAAIG,KAAI,SAACjB,GACN,OAAO,cAAC,EAAD,CAAakB,IAAKlB,GAASA,SAMpCmB,EAAc,SAACC,GACjB,OACE,wBACEJ,UAAU,SACVH,OAAO,MACPH,IAAG,uCAAkCU,EAAMF,KAC3CG,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfC,MAAM,qBCrBDC,EAAa,WACtB,OACA,8BACI,cAAC,EAAD,OCQOC,MAVf,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,IACA,cAAC,EAAD,QCKSW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.8d97e81e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 15;","import React from 'react';\r\nimport { wobble } from 'react-animations'\r\nimport Radium  from 'radium';\r\nimport { JsxEmit } from 'typescript';\r\n \r\nconst styles = {\r\nwobble:{\r\n    animation: 'x 10s',\r\n    animationName: [Radium.keyframes(wobble, 'wobble')]\r\n  }\r\n}\r\n \r\nexport const Spintor = () => {\r\n    return(\r\n        <Radium.StyleRoot >\r\n         <div style={styles.wobble}>\r\n          <img src=\"spjurter.png\" alt=\"bajs\" width=\"600\" height=\"600\"  />\r\n         </div > \r\n        </Radium.StyleRoot>\r\n    )\r\n};\r\n \r\n","import React from 'react';\r\nimport '../../App.scss';\r\nconst ids: string[] = [\"7009660294469324037\", \"6929955375391247621\"];\r\n\r\n\r\nexport const TikTokList = () => {\r\n    return (\r\n    <div className=\"TikToks\">\r\n    {ids.map((id) => {\r\n        return <TiktokEmbed url={id} key={id}/>\r\n    })}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst TiktokEmbed = (props: {url: string}): JSX.Element => {\r\n    return(\r\n      <iframe\r\n        className=\"TikTok\"\r\n        height=\"480\"\r\n        src={`https://www.tiktok.com/embed/${props.url}`}\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n        title=\"Embedded tiktok\"\r\n      />\r\n    )\r\n};","import React from \"react\";\r\nimport { TikTokList } from \"./TikTokList\";\r\n\r\nexport const TiktokView = () => {\r\n    return (\r\n    <div>\r\n        <TikTokList/>\r\n    </div>\r\n    \r\n)}","import React from 'react';\r\nimport './App.scss';\r\nimport { Spintor } from './Views/Spintor/Spintor.js';\r\nimport { TiktokView } from './Views/Tiktok/TiktokView';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" >\r\n      <h1 className=\"Head1\">Viggepedia!</h1>\r\n      <TiktokView></TiktokView>\r\n      <Spintor></Spintor>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}